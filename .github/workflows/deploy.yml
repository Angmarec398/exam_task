name: CI/CD Consumer pipeline

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Debug SSH key
        run: |
          ls -l ~/.ssh
          cat ~/.ssh/id_rsa
          cat ~/.ssh/known_hosts

      - name: Create directory on server
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} 'mkdir -p ~/home/exam_task'

      - name: Copy files via SSH
        run: |
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -r ./* ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:~/home/exam_task/

      - name: SSH into server and build Docker image
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} << 'EOF'
            sudo apt update
            sudo apt install -y docker.io
            sudo systemctl start docker
            sudo systemctl enable docker
            cd ~/home/exam_task
            docker build -t exam_task:latest .
            docker stop exam_task || true
            docker rm exam_task || true
            docker run -d --name exam_task \
              -e WEBHOOK=${{ secrets.WEBHOOK }} \
              -p 8010:8010 exam_task:latest
          EOF